<?xml version="1.0" encoding="UTF-8"?> 

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html>
<head>
	<title>Menus</title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
	<link rel="stylesheet" type="text/css" href="css/infoglue.css" />
	<link rel="stylesheet" type="text/css" href="css/menu.css" />
	<link rel="stylesheet" type="text/css" href="css/skins/${theme}/main.css" />
	<script type="text/javascript" src="script/listview.js"></script>

	#includeLatestJQuery()
	
	<script type="text/javascript">
	<!-- 
		setCMSContext('$this.getCMSBaseUrl()');
		
		var exp;
		var currentRepositoryId = "$!repositoryId";
		var lastClickedId = -1;
		
		function reload()
		{
			removeCookies()
			window.location.reload(false);
		}	
		
		/*
		function openUrlInWorkArea(url)
		{
			//alert("htmlTreeItemClick:" + url);
			if(parent.openUrlInWorkArea)
				parent.openUrlInWorkArea(url);
		}
		*/
		
		function syncWithTree(path, repositoryId, onlyTree)
		{
			//console.log("Path:" + path + ":" + onlyTree);
			var timeout = 500;
			if(repositoryId && currentRepositoryId != repositoryId)
			{
				if(onlyTree)
					parent.changeRepositoryInMenyById(repositoryId, path);
				else
					parent.changeRepositoryById(repositoryId);
				//parent.changeRepository(repositoryId, escape(path));
				timeout = 2000;
			}
			window.setTimeout(function () {
				if(frames['itreeFrame'].syncWithTree)
					frames['itreeFrame'].syncWithTree(path);
				}, timeout);

			var deliverLanguageId = top.getDeliverLanguageId();
			if(window.languageId != deliverLanguageId)
			{
				loadTreeSrc();
			}
		}
		
		function treeView()
		{
			return document.getElementById("itreeFrame");
		}

		function htmlTreeItemClick(itemId, repoId, path)
		{
			//alert("htmlTreeItemClick");
			lastClickedId = itemId;
			openUrlInWorkArea("ViewSiteNode!V3.action?siteNodeId=" + itemId + "&repositoryId=" + repoId + "&languageId=" + window.languageId, path);
		}
		
		function htmlTreeItemClickWithLanguage(itemId, repoId, path, languageId)
		{
			//alert("htmlTreeItemClick");
			lastClickedId = itemId;
			openUrlInWorkArea("ViewSiteNode!V3.action?siteNodeId=" + itemId + "&repositoryId=" + repoId + "&languageId=" + languageId, path);
		}
		
		function openUrlInWorkArea(url, titel)
		{
			//alert("openUrlInWorkArea:" + url);

			if(parent.openUrlInWorkArea)
				parent.openUrlInWorkArea(url, titel, 'structure', "$ui.getString("tool.common.pageTabLabelPrefix")");
		}
				
		function loadMainArea(siteNodeId, repositoryId, path)
		{
		    //alert("siteNodeId:" + siteNodeId);
		    parent.frames[3].location.href = "$this.getCMSBaseUrl()/ViewSiteNode!V3.action?siteNodeId=" + siteNodeId + "&repositoryId=" + repositoryId;
		}
	    
	    function refreshNode(nodeId, changeTypeId, addedNodeId, force)
		{
			//alert("nodeId: " + nodeId + " / " + changeTypeId + " / " + addedNodeId + " / " + lastClickedId + " / " + force);
			if(lastClickedId != nodeId || changeTypeId != 1 || force)
			{
				if(frames['itreeFrame'].refreshTreeNode)
					frames['itreeFrame'].refreshTreeNode(parseInt(nodeId), parseInt(changeTypeId), parseInt(addedNodeId));
			}
		}

	    function markSelected(nodeId)
		{
			//alert("markSelected...");
			setTimeout("1000");
				frames['itreeFrame'].markSelected(parseInt(nodeId));
		}
	    
	   	function notifyIsLoaded()
	    {
	    	//document.getElementById('treeDiv').style.left = '2px';
	    	//document.getElementById('treeDiv').style.right = '2px';
	    }

	    function notifyExp(v)
	    {
	    	exp=v;
	    }

		function removeCookies() 
		{
			//alert("document.cookie:" + document.cookie);
			var ca = document.cookie.split(';');
			for(var i=0;i < ca.length;i++) 
			{
				var c = ca[i];
				while (c.charAt(0)==' ') 
					c = c.substring(1,c.length);
				
				var eqIndex = c.indexOf("=");
				if (eqIndex > -1)
				{ 
					var name = c.substring(0,eqIndex);
					if(name.indexOf("JSESSIONID") == -1)
						document.cookie = name + "=" + escape("null")+"; expires=Monday, 04-Apr-1970 05:00:00 GMT";
				}
			}
		}
		
		function resizeTreeIframe(height, width)
		{
			//console.log("height:", height);
			//if(height > 20 && width > 20)
			//	$(treeView()).height(height);
			$(treeView()).height($(window).height()-20);
		}
		
		$(document).ready(function(){
			//console.log("height:", $(window).height());
			$(treeView()).height($(window).height()-20);
			
			//alert("$!path / $!fullPath");
			#if($path && $path != "")
				//syncWithTree("$!path", currentRepositoryId);
				syncWithTree("$!fullPath", currentRepositoryId);
 			##else
			##	openUrlInWorkArea("ViewStructureToolStartPage!V3.action?repositoryId=$repositoryId", '');
			#end

			setTimeout(function(){loadTreeSrc()}, 100);
		});

		function loadTreeSrc()
		{
  			var fallbackLanguage = "$!this.languages[0].id";
  			if(typeof(languageId) == 'undefined')
  				languageId = fallbackLanguage;
			if(top.getDeliverLanguageId)
				window.languageId = top.getDeliverLanguageId();
			else
				window.languageId = languageId;
				
			if(typeof(languageId) != 'undefined')
			{
				$("#itreeFrame").attr("src", "ViewStructureHtmlTree!V3.action?repositoryId=${repositoryId}" + (languageId != -1 ? "&sortLanguageId=" + languageId : ""));
			}
			else
			{
				setTimeout(function(){loadTreeSrc()}, 1000);
			}		
		}
 		
	-->
	</script>
	
</head>

<body class="generaltooledit">

    <div id="treeDivContainer" class="onlyExpanded">
		<iframe frameborder="0" name="itreeFrame" id="itreeFrame" src="" width="220" height="150" allowtransparency="true"></iframe>
    </div>
    	
</body>
</html>
