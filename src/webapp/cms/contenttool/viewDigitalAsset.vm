#define($headerMarkup)
	
	<link rel="stylesheet" type="text/css" href="css/assets.css">
	<link rel="stylesheet" type="text/css" href="css/cms.css" /> 
	 
	#if($useFckUploadMessages)
	<script type='text/javascript'>
	<!--
		function getRequestParameter(url, parameterName)
		{
			valueIndex = url.indexOf(parameterName + "=");
			endIndex = url.indexOf("&", valueIndex);
			if(endIndex != -1)
				value = url.substring(valueIndex + parameterName.length + 1, endIndex);
			else
				value = url.substring(valueIndex + parameterName.length + 1);
			return value;
		}
		
		#if($prefferedWYSIWYG == "ckeditor4")	
			var instanceName = getRequestParameter(window.location.href, "CKEditor");
			var CKEditorFuncNum = getRequestParameter(window.location.href, "CKEditorFuncNum");
			var fileUrl = 'DownloadAsset.action?contentId=$!contentVersionVO.contentId&languageId=$!contentVersionVO.languageId&assetKey=$!digitalAssetKey';
			var message = "$ui.getString("tool.contenttool.fileUpload.fileUploadSuccessHeader")";
			window.parent.CKEDITOR.tools.callFunction(CKEditorFuncNum, fileUrl, message);
		#else
			window.parent.OnUploadCompleted(0, 'DownloadAsset.action?contentId=$!contentVersionVO.contentId&languageId=$!contentVersionVO.languageId&assetKey=$!digitalAssetKey', 'DownloadAsset.action?contentId=$!contentVersionVO.contentId&languageId=$!contentVersionVO.languageId&assetKey=$!digitalAssetKey', 'Upload was successful');
		#end
	-->

	</script>
	#end

	<script type="text/javascript" src="script/listview.js"></script>
	<script type="text/javascript" src="script/infogluecommons.js"></script>

	#includeLatestJQuery()

	<script type="text/javascript" src="script/v3/infoglue.js"></script>

	<link rel="stylesheet" type="text/css" href="css/tabs.css" media="screen">

	<style type="text/css">
		.fileUploadTable
		{
			border: none;
			border-spacing: 8px;
			width: 410px;
		}
		.fileUploadTable td
		{
			padding: 0;
		}
		.fileUploadThumbnail
		{
			width: 150px; 
			border: 1px solid rgb(200, 200, 200); 
			background-color: white;
		}
		#file1
		{
			width: 240px;
			margin: 0;
		}
		.fileUploadTable #cboBoxTable
		{
			width: 240px;
		}
		
		#cboBoxTable td {border: 1px solid rgb(200, 200,200);}
		#cboBoxTable td:first-child {border-right: none;}

		/* Dropzonejs styling */
		#multiUploadContainer {
			border: 2px dashed #d0d1d0;
		}
		#multiUploadContainer:hover {
			cursor: pointer;
			background-color: rgba(208,209,208,0.2);
			transition: 300ms background-color;
		}
		.dz-message {
			padding: 35px 50px;
			text-align: center;
			-moz-user-select: none;
			-webkit-user-select: none;
			user-select: none;
		}

		#bulkupload {
			margin-top: 15px;
		}

		.bulkupload--itemcontainer {
			height: 80px;
			position: relative;
			padding-left: 10px; /* match with :before width */
			box-sizing: border-box;
			margin-bottom: 12px;
			font-size: 0;
			background-color: rgb(237, 237, 237);
		}

		.bulkupload--itemcontainer:before {
			content: "";
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			width: 0;
			height: 100%;
			background-color: #FFCB63;
			transition: 200ms width, 500ms background-color;
		}

		.bulkupload--itemcontainer.dz-processing:before {
			width: 10px;
		}

		.bulkupload--itemcontainer.dz-success:before {
			background-color: #67AB26;
		}

		.bulkupload--itemcontainer.dz-error:before {
			background-color: #D52F2F;
		}

		.bulkupload--preview {
			display: inline-block;
			height: 60px;
			width: 100px;
			background-size: contain;
			background-repeat: no-repeat;
			background-position: left center;
			vertical-align: top;
			box-sizing: border-box;
			margin: 10px;
			margin-right: 0;
		}

		.bulkupload--itemcontainer.-no-preview .bulkupload--preview {
			display: none;
		}

		.bulkupload-content {
			display: inline-block;
			height: 100%;
			font-size: 12px;
			box-sizing: border-box;
			padding: 10px;
			width: 70%;
			width: calc(100% - 110px);
		}

		.bulkupload--itemcontainer.-no-preview .bulkupload-content {
			width: 100%;
		}

		.multiUploadMessage--link {
			color: #0022AA !important;
			text-decoration: underline;
		}

		.assetTitle {
			white-space: nowrap;
			position: relative;
			margin-right: 70px;
		}

		.assetTitle--text {
			width: 100%;
			overflow: hidden;
			display: inline-block;
			text-overflow: ellipsis;
			font-weight: bold;
		}

		.assetTitle--text:after {
			font-weight: normal;
			margin-left: 0.4em;
		}

		.bulkupload--itemcontainer .assetTitle--text:after {
			content: "$ui.getString("tool.contenttool.fileUpload.multi.status.waiting")";
		}

		.bulkupload--itemcontainer.dz-processing .assetTitle--text:after {
			content: "$ui.getString("tool.contenttool.fileUpload.multi.status.uploading")";
		}

		.bulkupload--itemcontainer.dz-success .assetTitle--text:after {
			content: "$ui.getString("tool.contenttool.fileUpload.multi.status.uploaded")";
		}

		.bulkupload--itemcontainer.dz-error .assetTitle--text:after {
			content: "$ui.getString("tool.contenttool.fileUpload.multi.status.notUploaded")";
		}

		.assetTitle--size {
			position: absolute;
			right: -70px;
			top: 0;
		}

		.assetTitle--size:before {
			content: "(";
		}

		.assetTitle--size:after {
			content: ")";
		}

		.assetTitle--size strong {
			font-weight: normal;
		}

		.dz-error-message {
			margin: 5px 0;
			color: red;
		}

		.dz-progress {
			width: 50%;
			height: 1em;
			margin: 10px 0;
			border: 1px solid lightgray;
		}

		.bulkupload--itemcontainer.dz-success .dz-progress, .bulkupload--itemcontainer.dz-error .dz-progress {
			display: none;
		}

		.dz-upload {
			display: block;
			background-color: #67AB26;
			height: 100%;
			transition: 100ms width;
			width: 0;
		}

	</style>

	<script type="text/javascript" src="applications/dropzonejs/dropzone.min.js"></script>

	<script type="text/javascript">

		function resize()
		{
			var dimensionsWidth = $(window).width();
			var dimensionsHeight = $(window).height();
			var offsetTop = $("#tabsContainer").offset().top;
			var availableHeight = dimensionsHeight - offsetTop - $("#footertoolbar").height();
			$("#tabsContainer").height(availableHeight);
			
			$(".inlineTabDiv").height($("#tabsContainer").height() - $("#tabsContainer > ul").height() - 4).width($("#tabsContainer").width());
			$(".inlineTabDiv > iframe").height($("#tabsContainer").height() - $("#tabsContainer > ul").height() - 4).width($("#tabsContainer").width());
		}

		$(document).ready(function(){
			
			$("#tabsContainer").tabs({
				show:function(e, ui) {
					if(ui.index > 0)
					{
						$(".save").hide();
						$(".saveAndExit").hide();
						$(".cancel").hide();
						$("#footertoolbar div input.close").show();
					}
					else
					{	
						$(".save").show();
						$(".saveAndExit").show();
						#if($uploadedFilesCounter > 0)
							$(".cancel").hide();
							$("#footertoolbar div input.close").show();
						#else
							$(".cancel").show();
							$("#footertoolbar div input.close").hide();
						#end
					}
				}
			});
			#set( $maxFileSizeInMB = $uploadMaxSize / 1000 / 1000 )
			var divStatusValue = $("#divStatus").find(".divStatus--value");
			var multiUpload = new Dropzone("#multiUploadContainer",
				{
					url: "$URLBase/CreateDigitalAsset!multiple.action",
					previewTemplate: jQuery("#bulkUploadPreviewTemplate").html(),
					previewsContainer: "#bulkupload",
					parallelUploads: 1,
					thumbnail: function setupThumbnail(file, dataUri) {
						var previewElement = $(file.previewElement);
						var imagePreviewElement = previewElement.find(".bulkupload--preview");
						imagePreviewElement.attr("style", "background-image: url(" + dataUri + ");");
						previewElement.removeClass("-no-preview");
					},
					maxFilesize: $maxFileSizeInMB,
					dictFileTooBig: "$ui.getString("tool.contenttool.fileUpload.multi.error.fileSize")",
					fallback: function dropzoneFallback() {
						var multiUploadTab = jQuery("#bulkUploadTab");
						multiUploadTab.hide();
					}
				}
			);

			multiUpload.on("success", function fileUploadSuccess() {
				var currentValue = parseInt(divStatusValue.text()) || 0;
				divStatusValue.text("" + (currentValue + 1));
			});

			if(parent.showTab) {
				parent.showTab(2);
			}

		});
		
		var swfu;
	
		window.onload = function() 
		{
			#if($closeOnLoad == "true")
				refreshCaller();
				return;
			#end
		};
	</script>

	<script type="text/javascript">
	<!--
		
		function save()
		{
			submitForm();
		}
		
		function saveAndExit(action)
		{
			submitAndCloseForm();
		}
		
		function onCancel()
		{
			refreshCaller();
		}
		
		/**
		 * This method submits the form and shows a uploading-dialog.
		 */
		 
		function submitForm()
		{
			var value = document.getElementById("tt").value;
			var trimmed = value.replace(/^\s+|\s+$/g, '');
			if(trimmed != "")
			{
				if(document.getElementById("file1").value != "")
				{
					document.editForm.submit();
				}
				else
				{
					alert("$ui.getString("tool.contenttool.fileUpload.assetMissing")");
				}
			}
			else
			{
				alert("$ui.getString("tool.contenttool.fileUpload.assetKeyMissing")");
			}
		}

		/**
		 * This method submits the form and shows a uploading-dialog.
		 */
		 
		function submitAndCloseForm()
		{
			if(document.getElementById("tt").value != "")
			{
				if(document.getElementById("file1").value != "")
				{
					document.editForm.closeOnLoad.value = "true";
					document.editForm.submit();
				}
				else
				{
					alert("$ui.getString("tool.contenttool.fileUpload.assetMissing")");
				}
			}
			else
			{
				alert("$ui.getString("tool.contenttool.fileUpload.assetKeyMissing")");
			}
		}
		
		//*******************************************
		//This method refreshes the caller
		//*******************************************

		function refreshCaller()
		{

			if(parent.refreshView)
			{
				#if($!refreshAll)
					if(parent.refreshAll)
						parent.refreshAll();
					if(parent.refreshView)
						parent.refreshView("contentVersionAssets");
				#else
					if(parent.refreshView)
						parent.refreshView("contentVersionAssets");
				#end
			}
			else
			{
				var parentLocation = "";
				
				try
				{
					parentLocation = "" + window.opener.parent.document.location.href;
					var cleanAnchors = "$cleanAnchors";
				
					if(parentLocation.indexOf("ViewContentVersion!standalone.action") > -1 && !cleanAnchors)
					{
				
						var stopWordIndex = parentLocation.indexOf("#");
						if(stopWordIndex > -1)
							var newLocation = parentLocation.substring(0, stopWordIndex) + "&anchor=digitalAssetsBlock" + parentLocation.substring(stopWordIndex);
						else
							var newLocation = parentLocation + "&anchor=digitalAssetsBlock";
						
						//alert("parentLocation:" + parentLocation);
						//alert("newLocation:" + newLocation);
						//window.opener.parent.document.location = parentLocation + "anchor=digitalAssetsBlock";
						window.opener.parent.document.location.replace(newLocation);
						//window.opener.parent.document.location.reload(true);
					}
					else
					{
					
						if(window.opener && window.opener.parent && window.opener.parent.frames['main'])
						{
							var agt=navigator.userAgent.toLowerCase();
				    		if(agt.indexOf("safari")!=-1)
				    			window.opener.parent.frames[3].location.reload();
				    		else
				    			window.opener.parent.frames['main'].location.reload();
						}
						else
						{
				
							window.opener.location.reload();	
						}
					}
				}
				catch(err)
				{
					//alert("err:" + err.description);
				}
			}
						
			if(parent && parent.closeInlineDiv)
			{
				parent.closeInlineDiv();
			}
			else if(parent && parent.closeDialog) 
			{
				parent.closeDialog(); 
			}
			else 
			{
				window.close();
			}
		}
	
		function ddClick()
		{
			// Show / hide list
			var list = document.getElementById("dd");
			
			if (list.style.visibility == "hidden")
			{
				list.style.visibility = "";
			}
			else
			{
				list.style.visibility = "hidden";
			}
		}
		function ddListClick()
		{
			// Show / hide list
			var tt = document.getElementById("tt");
			var list = document.getElementById("dd");
			var val = "";
			if (list.selectedIndex > -1 && list.options[list.selectedIndex])
			{
				val = list.options[list.selectedIndex].value;
			}
			else
			{
				var firstItem = list.options[0];
				if (firstItem) {
					val = list.options[0].value;
				}
			}
			tt.value = val;
			list.style.visibility = "hidden";
			// alert(val);
			//alert("New assetKey:" + val + ":" + assetSizeArray["" + val + ""]);
			document.getElementById("maxSize").innerHTML = "(Max " + assetSizeArray["" + val + ""] + ")";
		}
		function ddHide()
		{
			var list = document.getElementById("dd");
			list.style.visibility = "hidden";
		}
		
		function keyChanged()
		{
			var tt = document.getElementById("tt");
			var val = tt.value;
			var userMaxSize = "$formatter.formatFileSize($this.userUploadMaxSize)";
			var keySize = "" + assetSizeArray["" + val + ""];
			//alert("userMaxSize: " + userMaxSize + ":" + keySize);
			if(keySize != 'undefined')
				document.getElementById("maxSize").innerHTML = "(Max " + keySize + ")";
			else
				document.getElementById("maxSize").innerHTML = "(Max " + userMaxSize + ")";			
		}
		
		function setAssetKey()
		{
			var assetKeyElement = document.getElementById("tt");
			//alert("assetKeyElement:" + assetKeyElement.value);
			if(assetKeyElement.value == '')
			{
				var fileName = document.getElementById("file1").value;
				//alert("fileName:" + fileName);
				var indexOfLastDot = fileName.lastIndexOf(".");
				var indexOfLastSlash = fileName.lastIndexOf("/");
				if(indexOfLastSlash == -1)
					indexOfLastSlash = fileName.lastIndexOf("\\");
				//alert("indexOfLastDot:" + indexOfLastDot);	
				//alert("indexOfLastSlash:" + indexOfLastSlash);	
				var assetKey = fileName.substring(indexOfLastSlash + 1, indexOfLastDot);
				//alert("assetKey:" + assetKey);	
				assetKeyElement.value = assetKey;
			}
		}
		
		var assetSizeArray = new Array();
		#foreach($assetKeyDefinition in $definedAssetKeys)
			#if("$assetKeyDefinition.maximumSize" != "-1")
				assetSizeArray["$assetKeyDefinition.assetKey"] = "$formatter.formatFileSize($assetKeyDefinition.maximumSize)";
			#else
				assetSizeArray["$assetKeyDefinition.assetKey"] = "$formatter.formatFileSize($this.userUploadMaxSize)";	
			#end
		#end
		
		function close()
		{
			if(parent.refreshView)
				parent.refreshView("contentVersionAssets");
		}
	-->
	</script>
	
#end

#beginLightCommonToolV3Impl("tool.contenttool.uploadDigitalAsset.header" "" "" false true $!disableCloseButton $headerMarkup false "highGreyBackground")

<div onfocus="this.blur();">
	
	#lightMenuToolbar("" $buttons $rightButtons) 

	<div style="clear: both;"></div>
		
	<h3>$ui.getString("tool.contenttool.uploadDigitalAsset.header")</h3>
	
	<div id="tabsContainer" class="flora">
	
		<ul>
			<li id="detailedUploadTab"><a href="#detailedUpload"><span>$ui.getString("tool.contenttool.fileUpload.fileUploadDetailedUploadLabel")</span></a></li>
			<li id="bulkUploadTab"><a href="#bulkUpload"><span>$ui.getString("tool.contenttool.fileUpload.fileUploadBulkUploadLabel")</span></a></li>
		</ul>
	
		<div id="detailedUpload" style="padding: 10px;">
	
			<form enctype="multipart/form-data" name="editForm" method="POST" action="CreateDigitalAsset.action">
			<input type="hidden" name="contentTypeDefinitionId" value="$contentTypeDefinitionVO.id">
			<input type="hidden" name="entity" value="$!entity">
			<input type="hidden" name="entityId" value="$!entityId">
			<input type="hidden" name="contentVersionId" value="$!contentVersionId">
			<input type="hidden" name="uploadedFilesCounter" value="$!uploadedFilesCounter">
			<input type="hidden" name="uploadedFilesIds" value="$!uploadedFilesIds">
			<input type="hidden" name="closeOnLoad" value="false">
			<table class="fileUploadTable">
				<tr>
					<td class="biglabel">
						<strong>#if($uploadedFilesCounter == 0)
							$ui.getString("tool.contenttool.fileUpload.fileUploadHeader")
						#else
							$ui.getString("tool.contenttool.fileUpload.fileUploadedSoFarLabel"): $uploadedFilesCounter
						#end
						</strong>
						<span id="maxSize">
							$ui.getString("tool.contenttool.myFileUploadLimit", $formatter.formatFileSize($this.userUploadMaxSize))
						</span>
					</td>
				</tr>
				<tr>
					<td>
						$ui.getString("tool.contenttool.fileUpload.fileUploadFileLabel")
					</td>
				</tr>		
				<tr>
					<td>
						<input type="FILE" name="file1" id="file1" onchange="setAssetKey();">
					</td>
					#*
					<td class="fileUploadThumbnail" rowspan="4" align="center">
						#if($uploadedFilesCounter != 0)
							#set($digitalAssetUrl = "$digitalAssetUrl")
							<a href="javascript:openPopup('$digitalAssetUrl', 'Preview', 'width=600,height=500,resizable=yes');"><img class="scaledbordered" src="$assetThumbnailUrl"><br>
							#if($digitalAssetKey.length() > 15)
								$digitalAssetKey.substring(0, 12)...
							#else
								$digitalAssetKey
							#end
							</a>
						#end
					</td>
						*#
				</tr>
				<tr>
					<td>
						$ui.getString("tool.contenttool.fileUpload.fileUploadKeyLabel")
					</td>
				</tr>
				<tr>
					<td>
						<div id="comboBox">
						  <table border="0" cellspacing="0" id="cboBoxTable">
						    <tr>
						      <td width="100%">
						  		<input type="text" name="digitalAssetKey" id="tt" size="20" onfocus="ddHide();" onChange="keyChanged();" style="border: 1px solid #FFFFFF" #if($definedAssetKeys.size() > 0)value="$definedAssetKeys.get(0).assetKey" #end></td>
						      	<td onClick="ddClick();">
						      	<img border="0" src="css/images/combodown.gif" width="15" height="20">
						      </td>
						    </tr>
						  </table>
						  <select size="5" name="dd" id="dd" style="width: 240px; height: 100; visibility: hidden; z-index: 100; position: absolute;" onClick="ddListClick();">
							#foreach($assetKeyDefinition in $definedAssetKeys)
								<option value="$assetKeyDefinition.assetKey">$assetKeyDefinition.assetKey</option>
							#end
						  </select>
						  <script type="text/javascript">
						  <!--	
							var maxSize = "$formatter.formatFileSize($this.userUploadMaxSize)";
						 	#foreach($assetKeyDefinition in $definedAssetKeys)
						 		#if($velocityCount == 1)
						 			#if($assetKeyDefinition.maximumSize != "-1")
								 		maxSize = "$formatter.formatFileSize($assetKeyDefinition.maximumSize)";
										document.getElementById("maxSize").innerHTML = "$ui.getString("tool.contenttool.myFileUploadLimit", $formatter.formatFileSize($this.userUploadMaxSize))";
							 		#end
						 		#end
						  	#end
						  -->
						  </script>
						</div>
					</td>
				</tr>
				</form>	
			</table>

			#if($uploadedFilesCounter != 0)
			<div style="margin-left: 8px; overflow: auto; height: 200px; width: 90%; border: 1px solid #ccc;">
				#set($digitalAssetIds = $uploadedFilesIdsAsArray)
				#foreach($digitalAssetId in $digitalAssetIds)
					#set($digitalAssetUrl = "$this.getDigitalAssetUrl($digitalAssetId)")
					<div class="imgBox">
						<p class="assetKeyP">
						#if($this.getDigitalAssetKey($digitalAssetId).length() > 15)
							$this.getDigitalAssetKey($digitalAssetId).substring(0, 12)...
						#else
							$this.getDigitalAssetKey($digitalAssetId)
						#end
						</p>
						<div class="imgBoxTop" style="background:url(css/images/v3/imgbox_bg.gif) repeat;">
							<div id="imgBoxTopInner" class="imgBoxTopInner">
								<img src="$this.getAssetThumbnailUrl($digitalAssetId)"/>
							</div>
						</div>
					</div>
				#end
			</div>
			#end

		</div>
	
		<div id="bulkUpload" style="padding: 10px;">
			#if(!$this.getAllowedSessionId($this.getSessionId()))
				<span style="color: red;">Please restart your session by logging out from the administrative tools and the log in again. Your session ID is out of sync and until you log restart it you cannot use the multi upload.</span>
			#else
			<div >
				<div id="intro">
					<strong>$ui.getString("tool.contenttool.fileUpload.fileUploadHeader") <span id="maxSize"> $ui.getString("tool.contenttool.myFileUploadLimit", $formatter.formatFileSize($this.userUploadMaxSize))</span></strong> &ndash; <span id="divStatus"><span class="divStatus--value">0</span> $ui.getString("tool.contenttool.fileUpload.multi.numberOfFiles")</span><br/><br/>
				</div>

				<form action="$URLBase/CreateDigitalAsset!multiple.action" class="multiUploadContainer" id="multiUploadContainer">
					<input type="hidden" name="contentTypeDefinitionId" value="$contentTypeDefinitionVO.id"/>
					<input type="hidden" name="entity" value="$!entity"/>
					<input type="hidden" name="entityId" value="$!entityId"/>
					<input type="hidden" name="contentVersionId" value="$!contentVersionId"/>
					<input type="hidden" name="uploadedFilesCounter" value="$!uploadedFilesCounter"/>
					<input type="hidden" name="closeOnLoad" value="$!closeOnLoad"/>
					<input type="hidden" name="JSESSIONID" value="$this.getSessionId()"/>

					<div class="dz-default dz-message">
						<div><a class="multiUploadMessage--link" href="javascript:void(0)">$ui.getString("tool.contenttool.fileUpload.multi.clickToUpload")</a> $ui.getString("tool.contenttool.fileUpload.multi.dropToUpload")</div>
					</div>
				</form>
				
				<div class="bulkupload" id="bulkupload"></div>
			</div>
			#end
		</div>
		<script type="x-dropzonejs" id="bulkUploadPreviewTemplate">
			<div class="bulkupload--itemcontainer -no-preview">
				<div class="bulkupload--preview"></div>
				<div class="bulkupload-content">
					<div class="bulkupload--title assetTitle">
						<span class="assetTitle--text" data-dz-name></span>
						<span class="assetTitle--size" data-dz-size></span>
					</div>
					<div class="dz-error-message"><span data-dz-errormessage></span></div>
					<div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress></span></div>
				</div>
			</div>
		</script>
	</div>
</div>

#lightFooterToolbar($footerButtons)

#endCommonToolV3()
